source('../SCRIPTS/00.readAndFormatSEINet.R')
dim(dat.sein)
names(dat.sein)
sort(unique(dat.sein$FieldName))
source('../SCRIPTS/00.readAndFormatSEINet.R')
fields.all <- c(fields.import, fields.noImport)
fields.all %in% dat.sein$FieldName
fields.all[!fields.all %in% dat.sein$FieldName]
source('../SCRIPTS/00.readAndFormatSEINet.R')
fields.all[!fields.all %in% dat.sein$FieldName]
setdiff(unique(dat.sein$FieldName), fields.all)
source('../SCRIPTS/00.readAndFormatSEINet.R')
setdiff(unique(dat.sein$FieldName), fields.all)
source('../SCRIPTS/00.readAndFormatSEINet.R')
setdiff(unique(dat.sein$FieldName), fields.all)
source('../SCRIPTS/00.readAndFormatSEINet.R')
setdiff(unique(dat.sein$FieldName), fields.all)
setdiff(unique(dat.sein$FieldName), x=fields.all)
setdiff(unique(dat.sein$FieldName), fields.all)
dat <- dat.sein
head(dat)
dat$Timestamp
dat$Timestamp %>% order
library(magrittr)
dat$Timestamp %>% order
a
a = sample(1:10)
a
a[order(a)]
a[rank(a)]
dat$Timestamp %>% order
source('../SCRIPTS/00.readAndFormatSEINet.R')
head(dat)
tail(dat)
dat$CatalogNumber %>% unique %>% length
sum(dat$OldValue == '')
sum(dat$OldValue == '1')
sum(dat$OldValue == '', na.rm = T)
sum(dat$OldValue == '1', na.rm = T)
sum(dat$OldValue == NA, na.rm = T)
sum(is.na(dat$OldValue), na.rm = T)
dat[1,]
dt = dat[1,]
dt['Editor']
dt['Editor'] %>% class
dt$Editor
grep('Goldberg', dat$Editor)
grep('Goldberg', dat$Editor, invert = T)
names(dat)
dat[0,]
cbind(dat[0,], dat[1,])
a
a = matrix(NA, 0, length(names(dat)), dimnames = list(NULL, names(dat))
)
a
cbind(a, dat[1,])
rbind(dat[0,], dat[1,])
100 %/% 50
100 %/% 49
100 / 49
100 / 50
source('../SCRIPTS/00.readAndFormatSEINet.R')
source('../SCRIPTS/00.readAndFormatSEINet.R')
source('../SCRIPTS/00.readAndFormatSEINet.R')
source('../SCRIPTS/00.readAndFormatSEINet.R')
date()
format(date())
format(date(), '%Y')
format(date(), '%YY')
format(Sys.time(), '%Y')
format(Sys.time(), '%Y-%m')
format(Sys.time(), '%Y-%m-%D')
format(Sys.time(), '%Y-%m-%d')
format(Sys.time(), '%Y-%m-%d_%H')
format(Sys.time(), '%Y-%m-%d_%H.%M')
format(Sys.time(), '%Y-%m-%d_%H.%M.%S')
format(Sys.time(), '%Y-%m-%d_%H.%M.%S')
format(Sys.time(), '%Y-%m-%d_%H.%M.%S')
format(Sys.time(), '%Y-%m-%d_%H.%M.%S')
stamp
doAll
doAll = T
paste(ifelse(doAll, 'allFields', 'fewFields'),
               format(Sys.time(), '%Y-%m-%d_%H.%M.%S'),
               sep = '_')
source('../SCRIPTS/00.readAndFormatSEINet.R')
source('../SCRIPTS/00.readAndFormatSEINet.R')
source('../SCRIPTS/00.readAndFormatSEINet.R')
source('../SCRIPTS/00.readAndFormatSEINet.R')
source('../SCRIPTS/00.readAndFormatSEINet.R')
source('../SCRIPTS/00.readAndFormatSEINet.R')
dat
dat$FieldName %>% unique %>% sort
dat$FieldName %>% unique %>% sort -> a
a
setdiff(a, fields.all)
setdiff(fields.all, a)
dat[grep('security', dat$FieldName ), ]
dat[grep('0027177MOR', dat$CatalogNumber ), ]
dat[grep('0027177MOR', dat$CatalogNumber ), ]
dr
dt
dt$Timestamp
as.POSIXct(43860.75)
convertToDate(43860.75)
convertToDate(43760.75)
convertToDate(43860.75)
dat$Timestamp[1]
convertToDate(42037.57)
paste(dt$Editor, convertToDate(dt$Timestamp), sep = '|')
source('../SCRIPTS/00.readAndFormatSEINet.R')
source('../SCRIPTS/00.readAndFormatSEINet.R')
source('../SCRIPTS/00.readAndFormatSEINet.R')
source('../SCRIPTS/00.readAndFormatSEINet.R')
source('../SCRIPTS/00.readAndFormatSEINet.R')
q()
ls()
doAll
dat
ls()
source('../SCRIPTS/00.readAndFormatSEINet.R')
ls()
head(out)
names(out)
names(1)
out(1_
out(1)
out
head(out)
out$decimallatitude
out[,2]
out[1,2]
out[,2]
test <- out[!is.na(out[,2]
)]
test
head(test)
head(out)
test <- out[is.na(out[,2])]
test
rm(test)
out[,2]
dim[out]
length(out)
head(out)
test <- as.dataframe(out)
test <- as.data.frame(out)
test
head(test)
names(test)
test$decimallatitude
head(test$decimallatitude)
test$decimallatitude = ""
test$decimallatitude
test <- as.data.frame(out)
head(test$decimallatitude)
test2 <- test[test$decimallatitude == ""),]
test2 <- test[test$decimallatitude == "",]
test2
head(test2)
test2 <- test![test$decimallatitude == "",]
test2 <- test[!test$decimallatitude == "",]
head(test2)
out.import <- <- as.data.frame(out)
out.import <- as.data.frame(out)
out.import <- out.import[!out.import$decimallatitude == "",]
write.csv(out.import, paste('../OUT/importToBrahmsTEST_', stamp, '.csv', sep = ''))
if(Collect_GUID) {
  CEGUID <- read.xlsx(dir('../BARCODE.Coll.GUID.MATCHUP', patt = 'xlsx', full = T), 1)
}
Collect_GUID <- TRUE
if(Collect_GUID) {
  CEGUID <- read.xlsx(dir('../BARCODE.Coll.GUID.MATCHUP', patt = 'xlsx', full = T), 1)
}
head(Collect_GUID)
head(CEGUID)
out.import$MatchGUID <- CEGUID$CollectionEventId[match(out.import$catalognumber, CEGUID$SpecimenBarcode)
)
out.import$MatchGUID <- CEGUID$CollectionEventId[match(out.import$catalognumber, CEGUID$SpecimenBarcode)]
CEGUID$SpecimenBarcode
out.import$MatchGUID
out.import$MatchGUID <- "NA"
out.import$MatchGUID
head(out.import)
CEGUID$CollectionEventId
out.import$catalognumber
names(out.import)
row.names(out.import)
row.names(out.import)
out.import$MatchGUID <- CEGUID$CollectionEventId[match(row.names(out.import), CEGUID$SpecimenBarcode)]
head(out.import)
names(out.import)
ls()
barcodes
ls()
head(out.firstChange)
head(out.lastChange)
head(dt)
dt
q()
source('../SCRIPTS/00.readAndFormatSEINet.R')
source('../SCRIPTS/00.readAndFormatSEINet.R', echo=T)
source('../SCRIPTS/00.readAndFormatSEINet.R', echo=T)
dat %>% head
dat[, fields.import] %>% head
  dat <- read.csv(dir('../DATA.FROM.SEINET', patt = 'csv', full = T), as.is = T)
  dat <- dat[order(dat$Timestamp), ]
dat[, fields.import] %>% head
head(dat)
dat[dat$FieldName %in% fields.import, ] %>% head
dat[dat$FieldName %in% fields.import, ] %>% head(20)
dat[dat$FieldName %in% fields.import, ] %>% tail(20)
dat[dat$FieldName %in% fields.import, ] %>% head(20)
dat$Timestamp[1]
dat$Timestamp[1] %>% as.Date
dat$Timestamp[1] %>% as.Date.character
dat$Timestamp[1] %>% as.Date.numeric
  dat <- dat[order(dat$EditId), ]
head(dat)
head(dat,20)
dt
dt$OldValue
head(dat)
dat$EditId %>% head
source('../SCRIPTS/00.readAndFormatSEINet.R', echo=T)
source('../SCRIPTS/00.readAndFormatSEINet.R', echo=T)
source('../SCRIPTS/00.readAndFormatSEINet.R', echo=T)
warnings()
dat$head
dat %>% head
0027694MOR
dat[dat$CatalogNumber == '0027694MOR
', ]
dat[dat$CatalogNumber == '0027694MOR', ]
dat[dat$CatalogNumber == '0027694MOR', ]
q()
